version: 2
jobs:
  build:
    docker:
      - image: circleci/golang:1.13.3
        environment:
          GO111MODULE: "on"
      
    working_directory: /go/src/github.com/ocrease/vboxanalyser
    steps:
      - checkout
      - restore_cache:
          keys:
            - go-mod-v1-{{ checksum "go.sum" }}
      - run: go test -v ./...
      - save_cache:
          key: go-mod-v1-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"
  deploy:
    docker:
       - image: circleci/golang:1.13.1
    working_directory: /go/src/github.com/ocrease/vboxanalyser
    steps:
      - checkout
      - restore_cache:
          keys:
            - go-mod-v1-{{ checksum "go.sum" }}
      - run: go mod download
      - run:
          name: cross compile
          command: |
            gox -os="windows" -arch="amd64" -output="dist/vboxanalyser" ./cmd/vboxanalyser
            mkdir dist/ui
            cp ui/* dist/ui
            cp vboxanalyser.cfg dist
            cd dist/ && zip -r vboxanalyser . 
            mkdir rel
            mv vboxanalyser.zip rel/vboxanalyser.zip
      - save_cache:
          key: go-mod-v1-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"
      #- store_artifacts:
      #    path: dist/
      - add_ssh_keys
      - run:
          name: create release
          command: |
            tag=$(semantics --output-tag)
            if [ "$tag" ]; then
              ghr -t $GITHUB_TOKEN -u $CIRCLE_PROJECT_USERNAME -r $CIRCLE_PROJECT_REPONAME --replace $tag dist/rel/
            else
              echo "The commit message(s) did not indicate a major/minor/patch version."
            fi

workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master
